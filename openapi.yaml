openapi: 3.0.1
info:
  title: Mentor-Mentee Matching API
  description: |
    API for matching mentors and mentees in a mentoring platform.
    
    - 모든 엔드포인트는 `/api/` prefix를 가집니다.
    - Swagger UI: [http://localhost:8080/api-docs](http://localhost:8080/api-docs)
  version: 1.0.1
servers:
  - url: http://localhost:8080/api
    description: Local development server
security:
  - BearerAuth: []
paths:
  /auth/signup:
    post:
      tags: [Authentication]
      summary: User registration
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '201': { description: User created }
        '400': { description: Bad request }
  /auth/login:
    post:
      tags: [Authentication]
      summary: User login
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401': { description: Unauthorized }
  /profile/me:
    get:
      tags: [User Profile]
      summary: Get my profile
      responses:
        '200':
          description: My profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401': { description: Unauthorized }
    put:
      tags: [User Profile]
      summary: Update my profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
      responses:
        '200':
          description: Profile updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '401': { description: Unauthorized }
  /profile/me/image:
    post:
      tags: [User Profile]
      summary: Upload my profile image
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Image uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
        '401': { description: Unauthorized }
  /mentors:
    get:
      tags: [Mentors]
      summary: Get mentor list
      parameters:
        - name: tech_stack
          in: query
          required: false
          schema:
            type: string
          description: Filter by tech stack (e.g. React)
        - name: search
          in: query
          required: false
          schema:
            type: string
          description: Search by name, tech_stack, or tags
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum: [name, company, location, available_time]
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum: [ASC, DESC]
      responses:
        '200':
          description: Mentor list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MentorListItem'
  /mentees:
    get:
      tags: [Mentees]
      summary: Get mentee list (mentor only)
      responses:
        '200':
          description: Mentee list
          content:
            application/json:
              schema:
                type: object
                properties:
                  mentees:
                    type: array
                    items:
                      $ref: '#/components/schemas/MenteeListItem'
        '403': { description: Forbidden }
  /matching:
    post:
      tags: [Matching]
      summary: Create matching request (mentee)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mentor_id:
                  type: integer
                message:
                  type: string
      responses:
        '200':
          description: Matching request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  success:
                    type: boolean
        '401': { description: Unauthorized }
    get:
      tags: [Matching]
      summary: Get my matching requests (mentee/mentor)
      responses:
        '200':
          description: Matching requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchingRequest'
  /matching/my-request:
    get:
      tags: [Matching]
      summary: Get my latest matching request (mentee)
      responses:
        '200':
          description: Latest matching request
          content:
            application/json:
              schema:
                type: object
                properties:
                  request:
                    $ref: '#/components/schemas/MatchingRequest'
  /matching/{id}:
    put:
      tags: [Matching]
      summary: Update matching request status (accept/reject/cancel)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [accepted, rejected, cancelled]
      responses:
        '200':
          description: Status updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '403': { description: Forbidden }
        '404': { description: Not found }
    delete:
      tags: [Matching]
      summary: Cancel matching request (mentee)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Request cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '404': { description: Not found }
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SignupRequest:
      type: object
      required: [email, password, name, role]
      properties:
        email: { type: string, format: email }
        password: { type: string }
        name: { type: string }
        role: { type: string, enum: [mentor, mentee] }
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email: { type: string, format: email }
        password: { type: string }
    LoginResponse:
      type: object
      properties:
        token: { type: string }
    UserProfile:
      type: object
      properties:
        id: { type: integer }
        email: { type: string }
        role: { type: string }
        name: { type: string }
        profile_image: { type: string }
        bio: { type: string }
        tech_stack: { type: string }
        mentoring_type: { type: string }
        company: { type: string }
        gender: { type: string }
        mbti: { type: string }
        phone: { type: string }
        location: { type: string }
        available_time: { type: string }
        social_links: { type: string }
        is_active: { type: boolean }
        tags: { type: string }
    UserProfileUpdate:
      type: object
      properties:
        name: { type: string }
        profile_image: { type: string }
        bio: { type: string }
        tech_stack: { type: string }
        mentoring_type: { type: string }
        company: { type: string }
        gender: { type: string }
        mbti: { type: string }
        phone: { type: string }
        location: { type: string }
        available_time: { type: string }
        social_links: { type: string }
        is_active: { type: boolean }
        tags: { type: string }
    MentorListItem:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
        profile_image: { type: string }
        bio: { type: string }
        tech_stack: { type: string }
        mentoring_type: { type: string }
        company: { type: string }
        gender: { type: string }
        mbti: { type: string }
        location: { type: string }
        available_time: { type: string }
        social_links: { type: string }
        tags: { type: string }
    MenteeListItem:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
        profile_image: { type: string }
        bio: { type: string }
    MatchingRequest:
      type: object
      properties:
        id: { type: integer }
        mentor_id: { type: integer }
        mentee_id: { type: integer }
        status: { type: string, enum: [pending, accepted, rejected, cancelled] }
        message: { type: string }
        created_at: { type: string }
        updated_at: { type: string }
